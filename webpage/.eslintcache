[{"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\index.js":"1","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\App.js":"2","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\reportWebVitals.js":"3","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Timeline\\Timeline.js":"4","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\TimeCard\\TimeCard.js":"5","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\GridContainer\\GridContainer.js":"6","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\GridItem\\GridItem.js":"7","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Timeline\\reducer\\TimelineReducer.js":"8","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Loading\\Loading.js":"9","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Login\\Login.js":"10","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Login\\reducer\\LoginReducer.js":"11","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Register\\Register.js":"12","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Register\\reducer\\RegisterReducer.js":"13","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\NewPost\\NewPost.js":"14"},{"size":500,"mtime":1609393954129,"results":"15","hashOfConfig":"16"},{"size":1068,"mtime":1609915082544,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1609393954129,"results":"18","hashOfConfig":"16"},{"size":7306,"mtime":1609916485291,"results":"19","hashOfConfig":"16"},{"size":958,"mtime":1609574235396,"results":"20","hashOfConfig":"16"},{"size":258,"mtime":1609516588702,"results":"21","hashOfConfig":"16"},{"size":243,"mtime":1609516586559,"results":"22","hashOfConfig":"16"},{"size":610,"mtime":1609910646778,"results":"23","hashOfConfig":"16"},{"size":414,"mtime":1609825766270,"results":"24","hashOfConfig":"16"},{"size":5619,"mtime":1609911204769,"results":"25","hashOfConfig":"16"},{"size":478,"mtime":1609825445018,"results":"26","hashOfConfig":"16"},{"size":4076,"mtime":1609831490042,"results":"27","hashOfConfig":"16"},{"size":484,"mtime":1609831592175,"results":"28","hashOfConfig":"16"},{"size":1072,"mtime":1609917941047,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1bdsnzj",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\index.js",[],["62","63"],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\App.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\reportWebVitals.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Timeline\\Timeline.js",["64","65"],"import React, { useEffect, useReducer, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, Dialog } from \"@material-ui/core\";\r\nimport Logo from \"../../sources/instagram_title.png\";\r\n\r\nimport { IoPersonSharp, IoLogoInstagram } from \"react-icons/io5\";\r\nimport { CgPen, CgTag } from \"react-icons/cg\";\r\nimport { MdAddAPhoto } from \"react-icons/md\";\r\n\r\nimport GridContainer from \"../../components/GridContainer/GridContainer\";\r\nimport GridItem from \"../../components/GridItem/GridItem\";\r\nimport { CHANGE_DATA, TimelineInit, TimelineReduce } from \"./reducer/TimelineReducer\";\r\n\r\nimport Loading from \"../Loading/Loading\";\r\nimport NewPost from \"../NewPost/NewPost\";\r\n\r\nconst maxWidth = \"50rem\";\r\nconst borderColor = \"grey.500\"\r\n\r\nconst Timeline = ({ history, location, match }) => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    const { email } = match.params; // 주소로 넘어오는 정보 ( /:email )\r\n\r\n    const [ state, dispatch ] = useReducer(TimelineReduce, TimelineInit);\r\n    const { login, username, posts, isLoading } = state;\r\n\r\n    const axiosTimeline = () => {\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        axios.post(`/api/timeline/profile/${email}`, { jwt: localStorage.getItem('access_token') }, { cancelToken: source.token })\r\n            .then( ({ data: { login, timeline } }) => {\r\n                if( !timeline ) return console.log(`can't find user`);\r\n\r\n                console.log(login, timeline);\r\n                // 데이터 세팅\r\n                dispatch({ type: CHANGE_DATA,\r\n                    data: {\r\n                        isLoading: false,\r\n                        login: login || '',\r\n                        ...timeline,\r\n                    }\r\n                })\r\n            })\r\n            .catch( e => { if( !axios.isCancel(e) ) console.log(e); });\r\n    }\r\n\r\n    useEffect(() => {\r\n        axiosTimeline();\r\n        return () => {\r\n            source.cancel();\r\n        }\r\n    }, [])\r\n\r\n\r\n    // 다이얼로그 창\r\n    const [ dialog, setDialog ] = useState('');\r\n    const onCloseDialog = () => setDialog(''); // 지우기\r\n\r\n    // 새 포스트 등록 기능\r\n    const onClickWritePost = ({ currentTarget: { id }}) => {\r\n        setDialog(id);\r\n    };\r\n\r\n    return (\r\n        isLoading\r\n        ? <Loading /> \r\n        :\r\n        <Box bgcolor=\"#f7f7f7\" height=\"100vh\" overflow=\"auto\">\r\n        <Box id=\"timeline-header\" bgcolor=\"#ffffff\"\r\n            position=\"fixed\" top=\"0\" height=\"4rem\" width=\"100vw\" \r\n            borderBottom={1} borderColor={borderColor}>\r\n            <Box display=\"flex\" width=\"100vw\" maxWidth={maxWidth} margin=\"auto\" height=\"4rem\"\r\n                alignItems=\"center\" justifyContent=\"space-between\">\r\n                <Box id=\"timeline-header-logo\">\r\n                    <img title=\"instagram-logo\" src={Logo} style={{ height: \"8rem\", width: \"auto\" }} />\r\n                </Box>\r\n                <Box id=\"timeline-header-user\">{ login }</Box>\r\n            </Box>\r\n        </Box>\r\n        <Box id=\"timeline-profile\" marginTop=\"4rem\">\r\n            <Box width=\"100vw\" maxWidth={maxWidth} margin=\"auto\" borderBottom={1} borderColor={borderColor} \r\n                display=\"flex\" padding=\"2rem\">\r\n                <Box id=\"timeline-profile-img\" flex={1} display=\"flex\" justifyContent=\"center\">\r\n                    <Box border={3} borderColor=\"#ffa4a4\" bgcolor=\"white\"\r\n                        width=\"10rem\" height=\"10rem\" borderRadius=\"5rem\" overflow=\"hidden\" \r\n                        display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                        <IoPersonSharp size=\"6rem\" color=\"black\"/>\r\n                    </Box>\r\n                </Box>\r\n                <Box id=\"timeline-profile-info\" flex={2} >\r\n                    <Box id=\"timeline-profile-email\" marginBottom=\"1rem\"\r\n                        fontSize=\"1.7rem\" fontWeight=\"fontWeightLight\">\r\n                        { email }\r\n                    </Box>\r\n                    <Box id=\"timeline-profile-count\" marginBottom=\"1rem\"\r\n                        display=\"flex\" alignItems=\"space-between\">\r\n                        <Box flex={1}>게시글 <Box display=\"inline\" fontWeight=\"fontWeightBold\">3300</Box></Box>\r\n                        <Box flex={1}>팔로워 <Box display=\"inline\" fontWeight=\"fontWeightBold\">3300</Box></Box>\r\n                        <Box flex={1}>팔로우 <Box display=\"inline\" fontWeight=\"fontWeightBold\">3300</Box></Box>\r\n                    </Box>\r\n                    <Box id=\"timeline-profile-introduce\" fontSize=\"1rem\">\r\n                        <Box fontWeight=\"fontWeightBold\">\r\n                            { username }\r\n                        </Box>\r\n                        <Box>\r\n                            자기소개\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n        <Box id=\"timeline-content\">\r\n            <Box width=\"100vw\" maxWidth={maxWidth} margin=\"auto\">\r\n                <Box id=\"timeline-content-tab\" marginBottom=\"10px\"\r\n                    display=\"flex\" justifyContent=\"center\" alignItems=\"center\"\r\n                    fontSize=\"0.9rem\" fontWeight=\"700\">\r\n                    <Box width=\"100px\" height=\"3rem\" textAlign=\"center\" lineHeight=\"3rem\">\r\n                        <CgPen size=\"0.9rem\"/>&nbsp;&nbsp;게시물\r\n                    </Box>\r\n                    <Box width=\"100px\" height=\"3rem\" textAlign=\"center\" lineHeight=\"3rem\">\r\n                        <CgTag size=\"0.9rem\"/>&nbsp;&nbsp;태그됨\r\n                    </Box>\r\n                </Box>\r\n                <GridContainer spacing={4} justify=\"flex-start\">\r\n                    { login === email &&\r\n                        <GridItem xs={4} key={'post-create'}>\r\n                            <Box overflow=\"hidden\" border={1} borderColor=\"#565656\" \r\n                                id=\"post-create\" style={{ cursor: \"pointer\" }} onClick={onClickWritePost}\r\n                                width=\"30vw\" maxWidth=\"15rem\" height=\"30vw\" maxHeight=\"15rem\" margin=\"auto\"\r\n                                display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                                <MdAddAPhoto size=\"5rem\" />\r\n                            </Box>\r\n                        </GridItem>\r\n                    }\r\n                    {\r\n                        posts.map((post, idx) => {\r\n                            return (\r\n                                <GridItem xs={4} key={`post-${idx}`}>\r\n                                    <Box overflow=\"hidden\" border={1} borderColor=\"#565656\"\r\n                                        width=\"30vw\" maxWidth=\"15rem\" height=\"30vw\" maxHeight=\"15rem\" margin=\"auto\"\r\n                                        display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                                        <IoLogoInstagram size=\"5rem\" />\r\n                                    </Box>\r\n                                </GridItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </GridContainer>\r\n            </Box>\r\n        </Box>\r\n        <Dialog maxWidth=\"md\" open={dialog === \"post-create\"} onClose={onCloseDialog}>\r\n            <NewPost />\r\n        </Dialog>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Timeline;","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\TimeCard\\TimeCard.js",["66","67"],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\GridContainer\\GridContainer.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\GridItem\\GridItem.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Timeline\\reducer\\TimelineReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Loading\\Loading.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Login\\Login.js",["68"],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Login\\reducer\\LoginReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Register\\Register.js",["69","70"],"import React, { useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Button, CircularProgress } from '@material-ui/core';\r\nimport Title from \"../../sources/instagram_title.png\"\r\nimport { Link } from 'react-router-dom';\r\nimport { RegisterInit, RegisterReduce } from './reducer/RegisterReducer';\r\nimport { CHANGE_DATA } from '../Timeline/reducer/TimelineReducer';\r\n\r\nconst Register = ({ history }) => {\r\n\r\n    const [ state, dispatch ] = useReducer(RegisterReduce, RegisterInit);\r\n    const { isLoading, identify, error } = state; // 각종 정보들\r\n    const { email, password } = identify; // 입력정보\r\n\r\n    // 입력함수\r\n    const onChangeInput = ({ currentTarget: { id, value }}) => {\r\n        const [ target, name ] = id.split('-');\r\n        dispatch({ type: CHANGE_DATA, \r\n            data: {\r\n                [target]: {\r\n                    ...state[target],\r\n                    [name]: value\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // 에러 타입 확인\r\n    const errorType = () => {\r\n        switch (error) {\r\n            case 401:\r\n                return \"잘못된 비밀번호입니다. 다시 확인하세요.\";        \r\n            case 500:\r\n                return \"Instagram에 연결할 수 없습니다. 인터넷에 연결되어 있는지 확인한 후 다시 시도해보세요.\";\r\n            default:\r\n                throw new Error(\"cant find error type\");\r\n        }\r\n    }\r\n\r\n    const onClickSubmit = () => {\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        alert(\"로그인 구현 필요\");\r\n        // axios.post('/api/')\r\n    }\r\n\r\n    return (\r\n        <Box id=\"login-page\" width=\"100vw\" height=\"100vh\" bgcolor=\"#eeeeee\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Box id=\"input-space\" width=\"19rem\" height=\"35rem\"\r\n                display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                <Box bgcolor=\"#ffffff\" width=\"100%\" height=\"70%\"\r\n                    border={1} borderColor=\"#aaaaaa\" padding=\"2rem\">\r\n                    <Box width=\"100%\" height=\"5rem\" overflow=\"hidden\" marginBottom=\"1rem\"\r\n                        display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <img src={Title} alt=\"instagram_logo\" style={{ width: \"70%\" }}/>\r\n                    </Box>\r\n                    <Box width=\"100%\">\r\n                        <input placeholder=\"전화번호, 사용자 이름 또는 이메일\" value={email} id=\"identify-email\" onChange={onChangeInput}\r\n                            style={{ width: \"98%\", height: \"2.1rem\", background: \"#eeeeee\", borderColor: \"#aaaaaa\", borderRadius: \"3px\", marginBottom: \"0.5rem\" }}/>\r\n                        <input placeholder=\"비밀번호\" type=\"password\" value={password} id=\"identify-password\" onChange={onChangeInput}\r\n                            style={{ width: \"98%\", height: \"2.1rem\", background: \"#eeeeee\", borderColor: \"#aaaaaa\", borderRadius: \"3px\", marginBottom: \"1rem\" }}/>\r\n                        <Button onClick={onClickSubmit} fullWidth variant=\"contained\" color=\"primary\" style={{ height: \"2.2rem\" }}>\r\n                            { !isLoading ? \"가입\" : <CircularProgress size=\"1.3rem\" color=\"#ffffff\" /> }\r\n                        </Button>\r\n                    </Box>\r\n                    <Box width=\"100%\" marginTop=\"1rem\" textAlign=\"center\" whiteSpace=\"wrap\" color=\"red\">{ error && errorType() }</Box>\r\n                </Box>\r\n                <Box bgcolor=\"#ffffff\" width=\"100%\" height=\"4%\" \r\n                    display=\"flex\" alignItems=\"center\" justifyContent=\"center\"\r\n                    border={1} borderColor=\"#aaaaaa\" padding=\"2rem\">\r\n                    <Box textAlign=\"center\">\r\n                        계정이 있으신가요? <Link style={{ color: \"#3399ff\", fontWeight: \"700\", textDecoration: \"none\" }} to=\"/login\">로그인</Link>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Register;","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Register\\reducer\\RegisterReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\NewPost\\NewPost.js",["71","72","73","74"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, IconButton } from \"@material-ui/core\";\r\n\r\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from \"react-icons/md\";\r\n\r\nimport IMG from \"../../sources/instagram_logo.png\";\r\n\r\n// 신규 포스트 등록 화면\r\nconst NewPost = () => {\r\n\r\n    const [ page, setPage ] = useState(0); // 현재 페이지 번호\r\n\r\n    return (\r\n        <Box width=\"100vw\" maxWidth=\"50rem\" display=\"flex\">\r\n            <Box id=\"img-space\" flex={3} position=\"relative\" maxHeight=\"70vh\">\r\n                <IconButton style={{ position: \"absolute\", left: \"0\", top: \"50%\", transform: \"translateY(-50%)\" }}><MdKeyboardArrowLeft /></IconButton>\r\n                    <img src={IMG} />\r\n                <IconButton style={{ position: \"absolute\", right: \"0\", top: \"50%\", transform: \"translateY(-50%)\" }}><MdKeyboardArrowRight /></IconButton>\r\n            </Box>\r\n            <Box id=\"text-space\" flex={1}>\r\n                ㅇㅅㅇ 내용내용\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default NewPost;",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":52,"column":8,"nodeType":"81","endLine":52,"endColumn":10,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":75,"column":21,"nodeType":"85","endLine":75,"endColumn":104},{"ruleId":"86","severity":1,"message":"87","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":21},{"ruleId":"86","severity":1,"message":"90","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":16},{"ruleId":"79","severity":1,"message":"91","line":82,"column":8,"nodeType":"81","endLine":82,"endColumn":10,"suggestions":"92"},{"ruleId":"86","severity":1,"message":"93","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"94","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":13},{"ruleId":"86","severity":1,"message":"94","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":13},{"ruleId":"86","severity":1,"message":"95","line":12,"column":13,"nodeType":"88","messageId":"89","endLine":12,"endColumn":17},{"ruleId":"86","severity":1,"message":"96","line":12,"column":19,"nodeType":"88","messageId":"89","endLine":12,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":18,"column":21,"nodeType":"85","endLine":18,"endColumn":38},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosTimeline' and 'source'. Either include them or remove the dependency array.","ArrayExpression",["99"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'GridContainer' is defined but never used.","Identifier","unusedVar","'GridItem' is defined but never used.","React Hook useEffect has a missing dependency: 'source'. Either include it or remove the dependency array.",["100"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [axiosTimeline, source]",{"range":"105","text":"106"},"Update the dependencies array to be: [source]",{"range":"107","text":"108"},[1947,1949],"[axiosTimeline, source]",[2921,2923],"[source]"]