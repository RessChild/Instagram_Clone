[{"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\index.js":"1","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\App.js":"2","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\reportWebVitals.js":"3","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Timeline\\Timeline.js":"4","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\TimeCard\\TimeCard.js":"5","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\GridContainer\\GridContainer.js":"6","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\GridItem\\GridItem.js":"7","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Timeline\\reducer\\TimelineReducer.js":"8","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Loading\\Loading.js":"9","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Login\\Login.js":"10","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Login\\reducer\\LoginReducer.js":"11","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Register\\Register.js":"12","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Register\\reducer\\RegisterReducer.js":"13","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\NewPost\\NewPost.js":"14","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Post\\Post.js":"15","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Post\\reducer\\PostReducer.js":"16","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\Comment\\Comment.js":"17","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Home\\Home.js":"18","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Home\\Reducer\\HomeReducer.js":"19","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\DevelopInfo\\DevelopInfo.js":"20","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Account\\Account.js":"21","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Account\\ChangePassword\\ChangePassword.js":"22","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Account\\EditProfile\\EditProfile.js":"23","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\PostContent\\PostContent.js":"24"},{"size":500,"mtime":1609393954129,"results":"25","hashOfConfig":"26"},{"size":1201,"mtime":1611553540194,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1609393954129,"results":"28","hashOfConfig":"26"},{"size":10364,"mtime":1611903053599,"results":"29","hashOfConfig":"26"},{"size":8012,"mtime":1611904278293,"results":"30","hashOfConfig":"26"},{"size":258,"mtime":1609516588702,"results":"31","hashOfConfig":"26"},{"size":243,"mtime":1609516586559,"results":"32","hashOfConfig":"26"},{"size":825,"mtime":1611296266048,"results":"33","hashOfConfig":"26"},{"size":414,"mtime":1610950129609,"results":"34","hashOfConfig":"26"},{"size":5619,"mtime":1609911204769,"results":"35","hashOfConfig":"26"},{"size":478,"mtime":1609825445018,"results":"36","hashOfConfig":"26"},{"size":6259,"mtime":1611726698991,"results":"37","hashOfConfig":"26"},{"size":536,"mtime":1611725847884,"results":"38","hashOfConfig":"26"},{"size":6429,"mtime":1611902597871,"results":"39","hashOfConfig":"26"},{"size":10734,"mtime":1611903738679,"results":"40","hashOfConfig":"26"},{"size":493,"mtime":1610522740476,"results":"41","hashOfConfig":"26"},{"size":1773,"mtime":1611903818412,"results":"42","hashOfConfig":"26"},{"size":10265,"mtime":1611898599184,"results":"43","hashOfConfig":"26"},{"size":946,"mtime":1611811388968,"results":"44","hashOfConfig":"26"},{"size":719,"mtime":1611305207504,"results":"45","hashOfConfig":"26"},{"size":3379,"mtime":1611727183366,"results":"46","hashOfConfig":"26"},{"size":263,"mtime":1611558134697,"results":"47","hashOfConfig":"26"},{"size":6054,"mtime":1611724856607,"results":"48","hashOfConfig":"26"},{"size":1545,"mtime":1611903779836,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1bdsnzj",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\index.js",[],["107","108"],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\App.js",["109"],"import './App.css';\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\"\n\nimport Home from \"./views/Home/Home\";\nimport Timeline from './views/Timeline/Timeline';\nimport Login from './views/Login/Login';\nimport Register from './views/Register/Register';\n\n\nimport NewPost from './views/NewPost/NewPost';\nimport Account from './views/Account/Account';\n\nfunction App() {\n\n  // useEffect(() => {\n  //   // 일반 경로 테스트\n  //   axios.get('/example')\n  //     .then( ({ data }) => console.log(\"example test:\", data) )\n  //     .catch( e => console.log(e) );\n\n  //   // DB 연동 테스트\n  //   axios.get('/example/database')\n  //     .then( ({ data }) => console.log(\"database test:\", data) )\n  //     .catch( e => console.log(e) );\n  // }, [])\n\n  // react-router\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/account\" component={Account} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/timeline/:email\" component={Timeline} />\n        <Redirect to='/'/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\reportWebVitals.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Timeline\\Timeline.js",["110","111","112"],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\TimeCard\\TimeCard.js",["113","114","115","116","117","118"],"import { Box, Button, IconButton, Input, InputAdornment } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\"\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from \"react-icons/md\";\r\nimport { AiFillHeart, AiOutlineHeart } from \"react-icons/ai\";\r\nimport { IoChatbubbleOutline, IoPaperPlaneOutline, IoPersonSharp } from \"react-icons/io5\";\r\nimport { BsBookmarkFill, BsBookmark, BsThreeDots} from \"react-icons/bs\";\r\n\r\nimport IMG from \"../../sources/instagram_logo.png\";\r\n\r\nconst borderColor = \"#c7c7c7\";\r\n\r\n// 화면 구성용 카드\r\nconst TimeCard = ({ post }) => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    // 현재 보여주는 사진 번호\r\n    const [ page, setPage ] = useState(0);\r\n    const onClickLeftPage = () => setPage(page - 1);\r\n    const onClickRightPage = () => setPage(page + 1);\r\n\r\n    // 페이지 리로딩\r\n    const axiosPost = () => {\r\n\r\n    }\r\n\r\n    // 덧글입력 기능\r\n    const [ newComment, setNewComment ] = useState('');\r\n    const onChangeNewComment = ({ currentTarget: { value }}) => setNewComment(value);\r\n    const onClickAddComment = () => {\r\n        axios.post(`/api/timeline/add-comment/${post.pid}`, { jwt: localStorage.getItem('access_token'), content: newComment }, { cancelToken: source.token })\r\n        .then(({ data }) => {\r\n            console.log(data);\r\n            // post.comments.push(data);\r\n            if(data) setNewComment('');\r\n            else alert(\"오류가 발생했습니다.\");\r\n        })\r\n        .catch( e => {\r\n            if(axios.isCancel(e)) return;\r\n            alert(e);\r\n        });\r\n    };\r\n\r\n    // 기능 활성화 여부 ( 좋아요, 북태그 )\r\n    const [ actived, setActived ] = useState({\r\n        like: false,\r\n        bookmark: false,\r\n    })\r\n\r\n    // 하단 버튼 ( 좋아요, 북마크 )\r\n    const onClickIcon = ({ currentTarget: { id }}) => {\r\n        console.log(id);\r\n        setActived({ ...actived, [id]: !actived[id] });\r\n    }\r\n\r\n    const { picture, writer, comments, content } = post;\r\n    const { email, username, id, profile_image } = writer;\r\n\r\n    // 프로필 메뉴 클릭\r\n    const onClickProfileMenu = () => {\r\n        alert(\"버튼 클릭\");\r\n    }\r\n\r\n    useEffect( () => {\r\n        // console.log(post);\r\n        return () => {\r\n            source.cancel();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Box width=\"100%\" bgcolor=\"#ffffff\" marginBottom=\"3rem\"\r\n            display=\"flex\" flexDirection=\"column\" border={1} borderColor={borderColor}>\r\n            <Box id=\"writer-email\" height=\"3.5rem\" borderBottom={1} borderColor={borderColor}\r\n                display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <Box width=\"4rem\" display=\"flex\" justifyContent=\"center\">\r\n                    {\r\n                        profile_image\r\n                        ? <img src={`/api/account/html-img/${profile_image}`} alt=\"user-profile\"\r\n                            style={{ width: \"2rem\", height: \"2rem\", borderRadius: \"1rem\", border: \"2px red solid\" }}/>\r\n                        : <IoPersonSharp size=\"2rem\" color=\"black\" style={{ borderRadius: \"2rem\", border: \"2px red solid\" }}/>\r\n                    }\r\n                    </Box>\r\n                    <Link to={`/timeline/${email}`}\r\n                        // onMouseOver=\"this.style.textDecorationLine='underline'\"\r\n                        // onMouseOut=\"this.style.textDecorationLine='none'\"\r\n                        style={{ color:\"#000000\", fontWeight: \"600\", textDecoration: \"none\" }}>\r\n                        { email }\r\n                    </Link>\r\n                </Box>\r\n                <IconButton onClick={onClickProfileMenu}>\r\n                    <BsThreeDots />\r\n                </IconButton>\r\n            </Box>\r\n            <Box minHeight=\"10rem\" position=\"relative\"\r\n                display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <img src={`/api/timeline/html-img/${picture[page]}`} \r\n                        style={{ minWidth: \"30%\", maxWidth: \"100%\", minHeight: \"30%\", maxHeight: \"35rem\" }}/>\r\n\r\n                    { // 좌측에 추가 이미지가 있을 때만 활성화\r\n                        picture.length && 0 < page &&\r\n                        <IconButton id=\"img-btn-left\" onClick={onClickLeftPage}\r\n                            style={{ position: \"absolute\", left: \"0\", top: \"50%\", transform: \"translateY(-50%)\" }}>\r\n                            <MdKeyboardArrowLeft />\r\n                        </IconButton>\r\n                    }\r\n                    { // 우측에 추가 이미지가 있을 때만 활성화\r\n                        page < picture.length - 1 &&\r\n                        <IconButton id=\"img-btn-right\" onClick={onClickRightPage}\r\n                            style={{ position: \"absolute\", right: \"0\", top: \"50%\", transform: \"translateY(-50%)\" }}>\r\n                            <MdKeyboardArrowRight />\r\n                        </IconButton>\r\n                    }\r\n            </Box>\r\n            <Box padding=\"0.8rem\" borderBottom={1} borderColor={borderColor}>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" marginBottom=\"0.3rem\">\r\n                    <Box display=\"flex\" width=\"25%\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                        { actived.like \r\n                            ? <AiFillHeart id=\"like\" size=\"2rem\" onClick={onClickIcon} style={{ cursor: \"pointer\" }} />\r\n                            : <AiOutlineHeart id=\"like\" size=\"2rem\" onClick={onClickIcon} style={{ cursor: \"pointer\" }} />\r\n                        }\r\n                        <IoChatbubbleOutline size=\"2rem\" onClick={onClickIcon} style={{ cursor: \"pointer\" }} />\r\n                        <IoPaperPlaneOutline size=\"2rem\" onClick={onClickIcon} style={{ cursor: \"pointer\" }}  />\r\n                    </Box>\r\n                    <Box>\r\n                        { actived.bookmark \r\n                            ? <BsBookmarkFill id=\"bookmark\" size=\"2rem\" onClick={onClickIcon} style={{ cursor: \"pointer\" }} /> \r\n                            : <BsBookmark id=\"bookmark\" size=\"2rem\" onClick={onClickIcon} style={{ cursor: \"pointer\" }} />\r\n                        }\r\n                    </Box>\r\n                </Box>\r\n                <Box fontSize=\"0.9rem\" whiteSpace=\"wrap\" style={{ wordBreak: \"break-all\" }}>\r\n                    <Link style={{ display: \"inline\", fontWeight: \"600\", marginRight: \"0.5rem\", textDecoration: \"none\" }}>{ email }</Link>\r\n                    { content }\r\n                </Box>\r\n                <Box>\r\n                { comments && comments.length > 0 && <Box fontSize=\"0.8rem\" color=\"#aaaaaa\" marginTop=\"0.2rem\" marginBottom=\"0.2rem\">댓글 {comments.length}개 모두보기</Box> }\r\n                { comments.map( ({ content, writer }, idx) =>\r\n                    <Box key={`comment-${idx}`} fontSize=\"0.9rem\">\r\n                        <Link style={{ display: \"inline\", fontWeight: \"600\", marginRight: \"0.5rem\", textDecoration: \"none\" }}>{ writer.email }</Link>\r\n                        { content }\r\n                    </Box>\r\n                )}\r\n                </Box>\r\n            </Box>\r\n            <Box height=\"3rem\">\r\n                <Input style={{ width: \"100%\", height: \"100%\", padding: \"0 0.8rem\" }}\r\n                    name=\"newComment\" value={newComment} onChange={onChangeNewComment}\r\n                    disableUnderline={true} placeholder=\"댓글 달기...\"\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                        <Button disabled={!newComment} onClick={onClickAddComment}\r\n                            style={{ color: !newComment ? \"#99ccff\" : \"blue\", fontWeight: \"600\" }}>게시</Button>\r\n                        </InputAdornment>\r\n                    } />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TimeCard;","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\GridContainer\\GridContainer.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\GridItem\\GridItem.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Timeline\\reducer\\TimelineReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Loading\\Loading.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Login\\Login.js",["119"],"import React, { useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Button, CircularProgress } from '@material-ui/core';\r\nimport Title from \"../../sources/instagram_title.png\"\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginInit, LoginReduce } from './reducer/LoginReducer';\r\nimport { CHANGE_DATA } from '../Timeline/reducer/TimelineReducer';\r\n\r\nconst Login = ({ history }) => {\r\n\r\n    const source = axios.CancelToken.source();\r\n\r\n    const [ state, dispatch ] = useReducer(LoginReduce, LoginInit);\r\n    const { isLoading, identify, error } = state; // 각종 정보들\r\n    const { email, password } = identify; // 입력정보\r\n\r\n    // 입력함수\r\n    const onChangeInput = ({ currentTarget: { id, value }}) => {\r\n        const [ target, name ] = id.split('-');\r\n        dispatch({ type: CHANGE_DATA, \r\n            data: {\r\n                [target]: {\r\n                    ...state[target],\r\n                    [name]: value\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // 에러 타입 확인\r\n    const errorType = () => {\r\n        switch (error) {\r\n            case 401:\r\n                return \"잘못된 비밀번호입니다. 다시 확인하세요.\";        \r\n            case 500:\r\n                return \"Instagram에 연결할 수 없습니다. 인터넷에 연결되어 있는지 확인한 후 다시 시도해보세요.\";\r\n            default:\r\n                return \"알 수 없는 오류입니다. 잠시 후 다시 시도해주세요.\";\r\n                // throw new Error(\"cant find error type\");\r\n        }\r\n    }\r\n\r\n    const onClickSubmit = () => {\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        axios.post('/api/identify/login', identify, { cancelToken: source.token })\r\n            .then( ({ data }) => {\r\n                console.log(data);\r\n\r\n                // 로그인 실패\r\n                if( !data ) {\r\n                    return dispatch({ type: CHANGE_DATA, data: {\r\n                        isLoading: false,\r\n                        error: 401,\r\n                    }})\r\n                }\r\n                // 로컬저장소에 정보 저장 ( 실제론 jwt 정보가 저장되어야 함 )\r\n                localStorage.setItem('access_token', email);\r\n                return history.push(`/timeline/${email}`);\r\n            })\r\n            .catch( e => {\r\n                if( axios.isCancel(e) ) return; // 취소인 경우 무시\r\n                if( e.config && e.config.url ) { // 네트워크 오류 검사\r\n                    dispatch({ type: CHANGE_DATA, data: {\r\n                        isLoading: false,\r\n                        error: 500,\r\n                    }})\r\n                }\r\n                else {\r\n                    dispatch({ type: CHANGE_DATA, data: {\r\n                        isLoading: false,\r\n                        error: e.response && e.response.status,\r\n                    }})\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        // if(localStorage.getItem('jwt')) history.replace(`/timeline/${localStorage.getItem('jwt')}`);\r\n        return () => {\r\n            source.cancel();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Box id=\"login-page\" width=\"100vw\" height=\"100vh\" bgcolor=\"#eeeeee\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Box id=\"input-space\" width=\"19rem\" height=\"35rem\"\r\n                display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                <Box bgcolor=\"#ffffff\" width=\"100%\" height=\"70%\"\r\n                    border={1} borderColor=\"#aaaaaa\" padding=\"2rem\">\r\n                    <Box width=\"100%\" height=\"5rem\" overflow=\"hidden\" marginBottom=\"1rem\"\r\n                        display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <img src={Title} alt=\"instagram_logo\" style={{ width: \"70%\" }}/>\r\n                    </Box>\r\n                    <Box width=\"100%\">\r\n                        <input placeholder=\"전화번호, 사용자 이름 또는 이메일\" value={email} id=\"identify-email\" onChange={onChangeInput}\r\n                            style={{ width: \"98%\", height: \"2.1rem\", background: \"#eeeeee\", borderColor: \"#aaaaaa\", borderRadius: \"3px\", marginBottom: \"0.5rem\" }}/>\r\n                        <input placeholder=\"비밀번호\" type=\"password\" value={password} id=\"identify-password\" onChange={onChangeInput}\r\n                            style={{ width: \"98%\", height: \"2.1rem\", background: \"#eeeeee\", borderColor: \"#aaaaaa\", borderRadius: \"3px\", marginBottom: \"1rem\" }}/>\r\n                        <Button onClick={onClickSubmit} fullWidth variant=\"contained\" color=\"primary\" style={{ height: \"2.2rem\" }}>\r\n                            { !isLoading ? \"로그인\" : <CircularProgress size=\"1.3rem\" color=\"inherit\" /> }\r\n                        </Button>\r\n                    </Box>\r\n                    <Box width=\"100%\" marginTop=\"1rem\" textAlign=\"center\" whiteSpace=\"wrap\" color=\"red\">{ error && errorType() }</Box>\r\n                </Box>\r\n                <Box bgcolor=\"#ffffff\" width=\"100%\" height=\"4%\" \r\n                    display=\"flex\" alignItems=\"center\" justifyContent=\"center\"\r\n                    border={1} borderColor=\"#aaaaaa\" padding=\"2rem\">\r\n                    <Box textAlign=\"center\">\r\n                        계정이 없으신가요? <Link style={{ color: \"#3399ff\", fontWeight: \"700\", textDecoration: \"none\" }} to=\"/register\">가입하기</Link>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Login;","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Login\\reducer\\LoginReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Register\\Register.js",["120"],"import React, { useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Button, CircularProgress } from '@material-ui/core';\r\nimport Title from \"../../sources/instagram_title.png\"\r\nimport { Link } from 'react-router-dom';\r\nimport { RegisterInit, RegisterReduce } from './reducer/RegisterReducer';\r\nimport { CHANGE_DATA } from '../Timeline/reducer/TimelineReducer';\r\n\r\nconst Register = ({ history }) => {\r\n\r\n    const source = axios.CancelToken.source();\r\n\r\n    const [ state, dispatch ] = useReducer(RegisterReduce, RegisterInit);\r\n    const { isLoading, identify, error } = state; // 각종 정보들\r\n    const { email, username, password, password_again } = identify; // 입력정보\r\n\r\n    // 입력함수\r\n    const onChangeInput = ({ currentTarget: { id, value }}) => {\r\n        const [ target, name ] = id.split('-');\r\n        dispatch({ type: CHANGE_DATA, \r\n            data: {\r\n                [target]: {\r\n                    ...state[target],\r\n                    [name]: value.trim()\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // 에러 타입 확인\r\n    const errorType = () => {\r\n        switch (error) {\r\n            case 200:\r\n                return \"부적절한 형식의 입력입니다. 다시 확인해주세요\";\r\n            case 201:\r\n                return \"비밀번호가 일치하지 않습니다.\";\r\n            case 401:\r\n                return \"이미 존재하는 계정 정보입니다.\";\r\n            case 500:\r\n                return \"Instagram에 연결할 수 없습니다. 인터넷에 연결되어 있는지 확인한 후 다시 시도해보세요.\";\r\n            default:\r\n                throw new Error(\"cant find error type\");\r\n        }\r\n    }\r\n\r\n    const onClickSubmit = () => {\r\n        if (!email || !username || !password) return dispatch({ type: CHANGE_DATA, data: { error: 200 }});\r\n        if( password !== password_again ) return dispatch({ type: CHANGE_DATA, data: { error: 201 }});\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        // alert(\"로그인 구현 필요\");\r\n        axios.post('/api/identify/register', { email, username, password }, { cancelToken: source.token })\r\n            .then(({ data }) => {\r\n                // 회원가입 실패\r\n                if( !data ) {\r\n                    return dispatch({ type: CHANGE_DATA, data: {\r\n                        isLoading: false,\r\n                        error: 401,\r\n                    }})\r\n                }\r\n                alert(\"회원가입에 성공하였습니다.\")\r\n                history.push('/');\r\n            })\r\n            .catch( e => {\r\n                if(axios.isCancel(e)) return;\r\n                if( e.config && e.config.url ) { // 네트워크 오류 검사\r\n                    dispatch({ type: CHANGE_DATA, data: {\r\n                        isLoading: false,\r\n                        error: 500,\r\n                    }})\r\n                }\r\n                else {\r\n                    dispatch({ type: CHANGE_DATA, data: {\r\n                        isLoading: false,\r\n                        error: e.response && e.response.status,\r\n                    }})\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Box id=\"login-page\" width=\"100vw\" height=\"100vh\" bgcolor=\"#eeeeee\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Box id=\"input-space\" width=\"19rem\" height=\"35rem\"\r\n                display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                <Box bgcolor=\"#ffffff\" width=\"100%\" height=\"70%\"\r\n                    border={1} borderColor=\"#aaaaaa\" padding=\"2rem\">\r\n                    <Box width=\"100%\" height=\"5rem\" overflow=\"hidden\" marginBottom=\"1rem\"\r\n                        display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <img src={Title} alt=\"instagram_logo\" style={{ width: \"70%\" }}/>\r\n                    </Box>\r\n                    <Box width=\"100%\">\r\n                        <input placeholder=\"전화번호, 사용자 이름 또는 이메일\" value={email} id=\"identify-email\" onChange={onChangeInput}\r\n                            style={{ width: \"98%\", height: \"2.1rem\", background: \"#eeeeee\", borderColor: \"#aaaaaa\", borderRadius: \"3px\", marginBottom: \"0.5rem\" }}/>\r\n                        <input placeholder=\"사용자 이름\" value={username} id=\"identify-username\" onChange={onChangeInput}\r\n                            style={{ width: \"98%\", height: \"2.1rem\", background: \"#eeeeee\", borderColor: \"#aaaaaa\", borderRadius: \"3px\", marginBottom: \"0.5rem\" }}/>\r\n                        <input placeholder=\"비밀번호\" type=\"password\" value={password} id=\"identify-password\" onChange={onChangeInput}\r\n                            style={{ width: \"98%\", height: \"2.1rem\", background: \"#eeeeee\", borderColor: \"#aaaaaa\", borderRadius: \"3px\", marginBottom: \"0.5rem\" }}/>\r\n                        <input placeholder=\"비밀번호 확인\" type=\"password\" value={password_again} id=\"identify-password_again\" onChange={onChangeInput}\r\n                            style={{ width: \"98%\", height: \"2.1rem\", background: \"#eeeeee\", borderColor: \"#aaaaaa\", borderRadius: \"3px\", marginBottom: \"1rem\" }}/>\r\n                        <Button onClick={onClickSubmit} fullWidth variant=\"contained\" color=\"primary\" style={{ height: \"2.2rem\" }}>\r\n                            { !isLoading ? \"가입\" : <CircularProgress size=\"1.3rem\" color=\"#ffffff\" /> }\r\n                        </Button>\r\n                    </Box>\r\n                    <Box width=\"100%\" marginTop=\"1rem\" textAlign=\"center\" whiteSpace=\"wrap\" color=\"red\">{ error && errorType() }</Box>\r\n                </Box>\r\n                <Box bgcolor=\"#ffffff\" width=\"100%\" height=\"4%\" \r\n                    display=\"flex\" alignItems=\"center\" justifyContent=\"center\"\r\n                    border={1} borderColor=\"#aaaaaa\" padding=\"2rem\">\r\n                    <Box textAlign=\"center\">\r\n                        계정이 있으신가요? <Link style={{ color: \"#3399ff\", fontWeight: \"700\", textDecoration: \"none\" }} to=\"/login\">로그인</Link>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Register;","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Register\\reducer\\RegisterReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\NewPost\\NewPost.js",["121","122"],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Post\\Post.js",["123","124","125","126"],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Post\\reducer\\PostReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\Comment\\Comment.js",["127"],"import { Box, IconButton } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { AiOutlineHeart } from \"react-icons/ai\";\r\n\r\nimport { IoPersonSharp } from \"react-icons/io5\";\r\nimport IMG from \"../../sources/instagram_logo.png\";\r\n\r\nconst Comment = ({ comment }) => {\r\n    const { writer, content, writedAt } = comment || {};\r\n    const { email, profile_image } = writer;\r\n    // console.log(comment);\r\n    return <Box display=\"flex\" marginTop=\"1.2rem\" marginBottom=\"1.2rem\">\r\n        <Box width=\"4rem\" display=\"flex\" justifyContent=\"center\" id=\"comment-profile\">\r\n        {\r\n            profile_image\r\n            ? <img src={`/api/account/html-img/${profile_image}`} alt=\"user-profile\"\r\n                style={{ width: \"2rem\", height: \"2rem\", borderRadius: \"1rem\", border: \"2px red solid\" }}/>\r\n            : <IoPersonSharp size=\"2rem\" color=\"black\" style={{ borderRadius: \"2rem\", border: \"2px red solid\" }}/>\r\n        }\r\n        </Box>\r\n        <Box id=\"comment-content\" flex={8} width=\"100%\" overflow=\"hidden\">\r\n            <Box display=\"flex\" width=\"100%\" whiteSpace=\"wrap\" style={{ wordBreak: \"break-all\" }}>\r\n                <Box display=\"contents\" fontWeight=\"600\" whiteSpace=\"nowrap\">{ email }</Box>\r\n                &nbsp;&nbsp;\r\n                { content }\r\n            </Box>\r\n\r\n            <Box display=\"flex\" justifyContent=\"space-between\"\r\n                marginTop=\"0.5rem\" fontSize=\"0.7rem\" color=\"#999999\">\r\n                <Box>\r\n                    { writedAt.slice(0,10) }\r\n                </Box>\r\n                <Box>좋아요</Box>\r\n                <Box>답글</Box>\r\n            </Box>\r\n        </Box>\r\n        <IconButton style={{ margin: \"0.1rem\" }}><AiOutlineHeart size=\"0.8rem\"/></IconButton>\r\n        </Box>\r\n}\r\n\r\nexport default Comment;","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Home\\Home.js",["128","129","130","131","132","133"],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Home\\Reducer\\HomeReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\DevelopInfo\\DevelopInfo.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Account\\Account.js",["134","135","136","137","138"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport Logo from \"../../sources/instagram_title.png\";\r\nimport EditProfile from \"./EditProfile/EditProfile\";\r\nimport ChangePassword from \"./ChangePassword/ChangePassword\";\r\n\r\nconst borderColor = \"#aaaaaa\";\r\nconst maxWidth = \"50rem\";\r\n\r\nconst Account = ({ history }) => {\r\n    // 메뉴 리스트 (상수)\r\n    const menuList = [\r\n        { title: \"프로필 편집\", component: <EditProfile />},\r\n        { title: \"비밀번호 변경\", component: <ChangePassword /> },\r\n    ]\r\n    const user = localStorage.getItem('access_token');\r\n    \r\n    // 메뉴 선택 관련\r\n    const [ hover, setHover ] = useState(-1);\r\n    const [ select, setSelect ] = useState(0);\r\n\r\n    const onClickMenu = ({ currentTarget: { id }}) => {\r\n        const [ target, number ] = id.split('-');\r\n        setSelect(parseInt(number));\r\n    };\r\n    const onMouseEnterMenu = ({ currentTarget: { id }}) => {\r\n        const [ target, number ] = id.split('-');\r\n        setHover(parseInt(number));\r\n    };\r\n    const onMouseLeaveMenu = () => setHover(-1);\r\n\r\n    // 로고 클릭\r\n    const onClickLogo = () =>  history.push('/');\r\n\r\n    return <Box bgcolor=\"#f7f7f7\" height=\"100vh\" overflow=\"auto\">\r\n        <Box id=\"timeline-header\" bgcolor=\"#ffffff\"\r\n            position=\"fixed\" top=\"0\" height=\"4rem\" width=\"100vw\" \r\n            borderBottom={1} borderColor=\"#aaaaaa\">\r\n            <Box display=\"flex\" width=\"100vw\" maxWidth={maxWidth} margin=\"auto\" height=\"4rem\"\r\n                alignItems=\"center\" justifyContent=\"space-between\">\r\n                <Box id=\"timeline-header-logo\" onClick={onClickLogo} style={{ cursor: \"pointer\" }}>\r\n                    <img title=\"instagram-logo\" src={Logo} style={{ height: \"8rem\", width: \"auto\" }} />\r\n                </Box>\r\n                <Box id=\"timeline-header-user\">{ user }</Box>\r\n            </Box>\r\n        </Box>\r\n        <Box id=\"timeline-profile\" marginTop=\"6rem\">\r\n            <Box display=\"flex\" justifyContent=\"space-between\" border={1} borderColor=\"#aaaaaa\"\r\n                width=\"100vw\" maxWidth={maxWidth} margin=\"auto\" minHeight=\"80vh\" bgcolor=\"white\">\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    { // 메뉴 출력\r\n                        menuList.map( ({ title }, idx) => \r\n                            <Box id={`menu-${idx}`} key={`menu-${idx}`} width=\"12rem\" display=\"flex\" alignItems=\"center\"\r\n                                onClick={onClickMenu} onMouseEnter={onMouseEnterMenu} onMouseLeave={onMouseLeaveMenu}\r\n                                paddingLeft=\"1.6rem\" paddingTop=\"1rem\" paddingBottom=\"1rem\"\r\n                                bgcolor={ idx !== select && idx === hover ? \"#f5f5f5\" : \"white\" } fontWeight={ idx === select ? \"700\" : \"500\" }\r\n                                borderLeft={2} borderColor={ idx === select ? \"black\" : ( idx === hover ? \"#aaaaaa\" : \"white\")}>\r\n                                { title }\r\n                            </Box>\r\n                        )\r\n                    }\r\n                </Box>\r\n                <Box flex=\"1\" minHeight=\"100%\" borderLeft={1} borderColor=\"#aaaaaa\" padding=\"2rem\">\r\n                    { menuList[select].component }\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    </Box>\r\n}\r\n\r\nexport default Account;","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Account\\ChangePassword\\ChangePassword.js",["139"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst ChangePassword = () => {\r\n    return <Box width=\"100%\" height=\"100%\">\r\n            비밀번호 변경\r\n        </Box>\r\n\r\n}\r\n\r\nexport default ChangePassword;","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\views\\Account\\EditProfile\\EditProfile.js",["140","141"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, Button, TextField } from \"@material-ui/core\";\r\n\r\nimport Logo from \"../../../sources/instagram_logo.png\";\r\n\r\nconst EditProfile = () => {\r\n\r\n    const source = axios.CancelToken.source();\r\n\r\n    const [ profile, setProfile ] = useState({ name: '', email: '', image: '' });\r\n    const { name, email, image } = profile;\r\n\r\n    // 프로필 사진 변경\r\n    const onChangeFile = ({ currentTarget: { files }}) => {\r\n        // console.log(files);\r\n        if( !files.length ) return; // 0 이하면 종료\r\n        const file = files[0];\r\n\r\n        // 타입 필터링\r\n        const nameArr = file.name.split('.');\r\n        if( !['png', 'jpg', 'jpeg'].includes(nameArr[nameArr.length - 1]) ) alert(\"적합한 파일타입이 아닙니다.\")\r\n        \r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        formData.append('jwt', localStorage.getItem('access_token'));\r\n\r\n        axios.post('/api/account/set-profile-image', formData, { cancelToken: source.token })\r\n            .then( ({ data }) => {\r\n                // 프로필 변경\r\n                console.log(data);\r\n                if( !data || !data.affected ) return; // 영향없음\r\n                setProfile({ ...profile, image: data.filename });\r\n            })\r\n            .catch( e => {\r\n                if(axios.isCancel(e)) return;\r\n                alert(e);\r\n            })\r\n    }\r\n\r\n    const onChangeInput = ({ currentTarget: { id, value }}) => {\r\n        const [ tag, target ] = id.split('-');\r\n        setProfile({ ...profile, [target]: value.trim() });\r\n    }\r\n\r\n    // 프로필 정보 axios 함수\r\n    const axiosProfile = () => {\r\n        axios.post(`/api/account`, { jwt: localStorage.getItem('access_token') }, { cancelToken: source.token })\r\n            .then( ({ data }) => {\r\n                console.log(data);\r\n                const { email, username, profile_image } = data;\r\n                setProfile({\r\n                    name: username,\r\n                    email: email,\r\n                    image: profile_image,\r\n                });\r\n            })\r\n            .catch( e => {\r\n                if(axios.isCancel(e)) return;\r\n                alert(e);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axiosProfile();\r\n        return () => {\r\n            source.cancel();\r\n        }\r\n    }, [])\r\n\r\n    const onClickEditSubmit = () => {\r\n        axios.post('/api/account/set-profile', { jwt: localStorage.getItem('access_token'), name, email }, { cancelToken: source.token })\r\n            .then(({ data }) => {\r\n                console.log(data);\r\n            })\r\n            .catch( e => {\r\n                if(axios.isCancel(e)) return;\r\n                alert(e);\r\n            })\r\n    }\r\n\r\n    return <Box width=\"100%\" height=\"100%\" position=\"relative\">\r\n        <Box display=\"flex\" marginBottom=\"1rem\">\r\n            <Box id=\"name-left\" flex={1} paddingRight=\"2rem\" display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\r\n                <img alt=\"프로필 사진\" src={ image ? `/api/account/html-img/${image}` : Logo }\r\n                    style={{ width: \"2rem\", height: \"2rem\", overflow: \"hidden\", border: \"1px solid #999999\", borderRadius: \"1rem\" }}/>\r\n            </Box>\r\n            <Box id=\"name-right\" flex={3} paddingRight=\"3rem\">\r\n                <Box fontWeight=\"600\">{ email }</Box>\r\n                <Box fontSize=\"0.9rem\" color=\"#6666ff\" fontWeight=\"600\">\r\n                    <label htmlFor=\"profile-img-input\" style={{ cursor: \"pointer\" }}>프로필 사진 바꾸기</label>\r\n                    <input id=\"profile-img-input\" type=\"file\" accept=\"image/png, image/jpeg\" \r\n                        onChange={onChangeFile} style={{ display: \"none\" }} />\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n\r\n        <Box display=\"flex\" marginBottom=\"1rem\">\r\n            <Box id=\"name-left\" flex={1} paddingRight=\"2rem\" paddingTop=\"0.5rem\"\r\n                fontWeight=\"700\" display=\"flex\" justifyContent=\"flex-end\">\r\n                이름\r\n            </Box>\r\n            <Box id=\"name-right\" flex={3} paddingRight=\"3rem\">\r\n                <TextField size=\"small\" variant=\"outlined\" fullWidth id=\"input-name\" value={name} onChange={onChangeInput}/>\r\n                <Box marginTop=\"0.5rem\" color=\"#aaaaaa\" fontSize=\"0.7rem\" fontWeight=\"600\">\r\n                    사람들이 이름, 별명 또는 비즈니스 이름 등 회원님의 알려진 이름을 사용하여 회원님의 계정을 찾을 수 있도록 도와주세요.\r\n                    <br/><br/>\r\n                    이름은 14일 안에 두 번만 변경할 수 있습니다.\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n        \r\n        <Box display=\"flex\" marginBottom=\"1rem\">\r\n            <Box id=\"email-left\" flex={1} paddingRight=\"2rem\" paddingTop=\"0.5rem\"\r\n                fontWeight=\"700\" display=\"flex\" justifyContent=\"flex-end\">\r\n                사용자 이름\r\n            </Box>\r\n            <Box id=\"email-right\" flex={3} paddingRight=\"3rem\">\r\n                <TextField size=\"small\" variant=\"outlined\" fullWidth id=\"input-email\" value={email} onChange={onChangeInput}/>\r\n                <Box marginTop=\"0.5rem\" color=\"#aaaaaa\" fontSize=\"0.7rem\" fontWeight=\"600\">\r\n                    대부분의 경우 14일 이내에 사용자 이름을 다시 {email}(으)로 변경할 수 있습니다. 더 알아보기\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n\r\n        <Box position=\"absolute\" width=\"100%\" bottom=\"0\" display=\"flex\" marginBottom=\"1rem\">\r\n            <Box id=\"email-left\" flex={1} paddingRight=\"2rem\" paddingTop=\"0.5rem\"\r\n                fontWeight=\"700\" display=\"flex\" justifyContent=\"flex-end\">\r\n            </Box>\r\n            <Box id=\"email-right\" flex={3} paddingRight=\"3rem\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onClickEditSubmit}>제출</Button>\r\n            </Box>\r\n        </Box>\r\n    </Box>\r\n}\r\n\r\nexport default EditProfile;","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\components\\PostContent\\PostContent.js",["142","143","144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":10,"column":8,"nodeType":"151","messageId":"152","endLine":10,"endColumn":15},{"ruleId":"149","severity":1,"message":"153","line":6,"column":25,"nodeType":"151","messageId":"152","endLine":6,"endColumn":40},{"ruleId":"154","severity":1,"message":"155","line":56,"column":8,"nodeType":"156","endLine":56,"endColumn":10,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":108,"column":21,"nodeType":"160","endLine":108,"endColumn":104},{"ruleId":"149","severity":1,"message":"161","line":11,"column":8,"nodeType":"151","messageId":"152","endLine":11,"endColumn":11},{"ruleId":"149","severity":1,"message":"162","line":25,"column":11,"nodeType":"151","messageId":"152","endLine":25,"endColumn":20},{"ruleId":"149","severity":1,"message":"163","line":59,"column":20,"nodeType":"151","messageId":"152","endLine":59,"endColumn":28},{"ruleId":"149","severity":1,"message":"164","line":59,"column":30,"nodeType":"151","messageId":"152","endLine":59,"endColumn":32},{"ruleId":"154","severity":1,"message":"165","line":71,"column":8,"nodeType":"156","endLine":71,"endColumn":10,"suggestions":"166"},{"ruleId":"158","severity":1,"message":"159","line":100,"column":17,"nodeType":"160","endLine":101,"endColumn":110},{"ruleId":"154","severity":1,"message":"165","line":82,"column":8,"nodeType":"156","endLine":82,"endColumn":10,"suggestions":"167"},{"ruleId":"149","severity":1,"message":"168","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"161","line":9,"column":8,"nodeType":"151","messageId":"152","endLine":9,"endColumn":11},{"ruleId":"154","severity":1,"message":"165","line":43,"column":8,"nodeType":"156","endLine":43,"endColumn":10,"suggestions":"169"},{"ruleId":"149","severity":1,"message":"170","line":3,"column":58,"nodeType":"151","messageId":"152","endLine":3,"endColumn":62},{"ruleId":"149","severity":1,"message":"171","line":3,"column":64,"nodeType":"151","messageId":"152","endLine":3,"endColumn":73},{"ruleId":"149","severity":1,"message":"172","line":16,"column":8,"nodeType":"151","messageId":"152","endLine":16,"endColumn":15},{"ruleId":"154","severity":1,"message":"173","line":80,"column":8,"nodeType":"156","endLine":80,"endColumn":10,"suggestions":"174"},{"ruleId":"149","severity":1,"message":"161","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":11},{"ruleId":"149","severity":1,"message":"175","line":1,"column":40,"nodeType":"151","messageId":"152","endLine":1,"endColumn":48},{"ruleId":"149","severity":1,"message":"176","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":21},{"ruleId":"154","severity":1,"message":"177","line":114,"column":8,"nodeType":"156","endLine":114,"endColumn":10,"suggestions":"178"},{"ruleId":"158","severity":1,"message":"159","line":134,"column":29,"nodeType":"160","endLine":134,"endColumn":112},{"ruleId":"179","severity":1,"message":"180","line":157,"column":37,"nodeType":"160","endLine":158,"endColumn":137},{"ruleId":"158","severity":1,"message":"159","line":180,"column":33,"nodeType":"160","endLine":180,"endColumn":79},{"ruleId":"149","severity":1,"message":"181","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":13},{"ruleId":"149","severity":1,"message":"182","line":10,"column":7,"nodeType":"151","messageId":"152","endLine":10,"endColumn":18},{"ruleId":"149","severity":1,"message":"183","line":26,"column":17,"nodeType":"151","messageId":"152","endLine":26,"endColumn":23},{"ruleId":"149","severity":1,"message":"183","line":30,"column":17,"nodeType":"151","messageId":"152","endLine":30,"endColumn":23},{"ruleId":"158","severity":1,"message":"159","line":45,"column":21,"nodeType":"160","endLine":45,"endColumn":104},{"ruleId":"149","severity":1,"message":"181","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":13},{"ruleId":"149","severity":1,"message":"184","line":42,"column":17,"nodeType":"151","messageId":"152","endLine":42,"endColumn":20},{"ruleId":"154","severity":1,"message":"185","line":69,"column":8,"nodeType":"156","endLine":69,"endColumn":10,"suggestions":"186"},{"ruleId":"149","severity":1,"message":"187","line":1,"column":15,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"188","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":24},{"ruleId":"149","severity":1,"message":"161","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":11},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'NewPost' is defined but never used.","Identifier","unusedVar","'IoLogoInstagram' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosTimeline' and 'source'. Either include them or remove the dependency array.","ArrayExpression",["191"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IMG' is defined but never used.","'axiosPost' is assigned a value but never used.","'username' is assigned a value but never used.","'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'source'. Either include it or remove the dependency array.",["192"],["193"],"'useEffect' is defined but never used.",["194"],"'Link' is defined but never used.","'TextField' is defined but never used.","'Loading' is defined but never used.","React Hook useEffect has missing dependencies: 'axiosPost' and 'source'. Either include them or remove the dependency array.",["195"],"'useState' is defined but never used.","'AiFillHeart' is defined but never used.","React Hook useEffect has missing dependencies: 'axiosUser' and 'source'. Either include them or remove the dependency array.",["196"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'axios' is defined but never used.","'borderColor' is assigned a value but never used.","'target' is assigned a value but never used.","'tag' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axiosProfile' and 'source'. Either include them or remove the dependency array.",["197"],"'IconButton' is defined but never used.","'AiOutlineHeart' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"200","fix":"202"},{"desc":"200","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [axiosTimeline, source]",{"range":"210","text":"211"},"Update the dependencies array to be: [source]",{"range":"212","text":"213"},{"range":"214","text":"213"},{"range":"215","text":"213"},"Update the dependencies array to be: [axiosPost, source]",{"range":"216","text":"217"},"Update the dependencies array to be: [axiosUser, source]",{"range":"218","text":"219"},"Update the dependencies array to be: [axiosProfile, source]",{"range":"220","text":"221"},[2211,2213],"[axiosTimeline, source]",[2261,2263],"[source]",[2921,2923],[1477,1479],[2945,2947],"[axiosPost, source]",[4373,4375],"[axiosUser, source]",[2332,2334],"[axiosProfile, source]"]